<?php

if (!module_exists('xautoload')) {
  spl_autoload_register('_amazee_crumbs_autoload');
}

/**
 * Autoload callback.
 */
function _amazee_crumbs_autoload($class) {
  if (preg_match('#^amazee_crumbs_(.*)$#', $class, $matches)) {
    module_load_include('php', 'amazee_crumbs', 'lib/' . strtr($matches[1], '_', '/'));
  }
}

/**
 * Implements hook_crumbs_plugins().
 *
 * @param crumbs_InjectedAPI_hookCrumbsPlugins $api
 */
function amazee_crumbs_crumbs_plugins($api) {
  $plugin = new amazee_crumbs_MonoPlugin_FirstPathFromActiveTrail();
  $api->monoPlugin('firstPathFromActiveTrail', $plugin);

  $plugin = new amazee_crumbs_MonoPlugin_NodeTitle();
  $api->monoPlugin('nodeTitle', $plugin);
}

/**
 * Implements hook_init().
 */
function amazee_crumbs_init() {

  // Set active trail basing on the calculated breadcrumbs. This is required to
  // indicate menu items as active.
  $set_active_trail = TRUE;
  if (function_exists('_breadcrumb_tuning_get')) {
    list($matched_rule) = _breadcrumb_tuning_get();
    if (!empty($matched_rule['actions']['set-active-trail-path'])) {
      // The breadcrumb_tuning module has been handled the active trail.
      $set_active_trail = FALSE;
    }
  }
  if (
    $set_active_trail
    && ($main_menu_name = _amazee_crumbs_get_active_main_menu_name())
  ) {
    foreach (array_reverse(crumbs()->page->breadcrumbItems) as $item) {
      if (strpos($item['href'], '%') === FALSE) {
        $menu_link_exists = (bool) db_select('menu_links', 'ml')
          ->condition('ml.menu_name', $main_menu_name)
          ->condition('ml.link_path', $item['href'])
          ->countQuery()
          ->execute()
          ->fetchField();
        if ($menu_link_exists) {
          menu_tree_set_path($main_menu_name, $item['href']);
          break;
        }
      }
    }
  }
}

/**
 * Implements hook_query_TAG_alter().
 */
function amazee_crumbs_query_crumbs_select_menu_links_alter(QueryAlterableInterface $query) {
  if ($query instanceof SelectQuery) {
    $main_menu_name = _amazee_crumbs_get_active_main_menu_name();
    if ($main_menu_name) {
      foreach ($query->getTables() as $table) {
        if ($table['table'] == 'menu_links') {
          $query->condition($table['alias'] . '.menu_name', $main_menu_name);
        }
      }
    }
  }
}

/**
 * Returns currently active main menu.
 *
 * Works only if $conf['amazee_crumbs_main_menu_mini_panel'] is set.
 *
 * @return string|null
 *   Menu machine name, or NULL if menu can't be detected or path is admin.
 */
function _amazee_crumbs_get_active_main_menu_name() {
  $cache =& drupal_static(__FUNCTION__, FALSE);
  if ($cache === FALSE) {
    $cache = NULL;
    $current_path = current_path();
    if ($current_path == 'admin/structure/crumbs/debug' || !path_is_admin($current_path)) {
      $main_menu_mini_panel = variable_get('amazee_crumbs_main_menu_mini_panel');
      if ($main_menu_mini_panel) {
        $mini = panels_mini_load($main_menu_mini_panel);
        if ($mini) {
          ctools_include('plugins', 'panels');
          /** @var panels_display $display */
          $display = $mini->display;
          foreach ($display->content as $pane) {
            if (strpos($pane->subtype, 'superfish-') === 0) {
              if (panels_pane_access($pane, $display)) {
                list(, $superfish_id) = explode('-', $pane->subtype);
                list($main_menu_name) = explode(':', variable_get('superfish_menu_' . $superfish_id));
                $cache = $main_menu_name;
                break;
              }
            }
          }
        }
      }
    }
  }
  return $cache;
}
